
configure(project.rootProject) {
    ext {
        publishUser = getBuildProperty ('PUBLISH_USER')
        publishKey =  getBuildProperty ('PUBLISH_KEY')

        signKey = getBuildSignKey ('SIGN_KEY')
        signPwd = getBuildProperty ('SIGN_PWD')

        isReleaseVersion = !version.endsWith("SNAPSHOT")
    }
}


afterEvaluate {

    publishing {
        publications {
            pluginMaven (MavenPublication) {
                //  groupId project.group
                //  artifactId project.name
                //  version project.version

                pom {
                    name = project.projectTitle
                    description = project.projectDesc
                    url = project.projectUrl

                    developers {
                        developer {
                            id = 'hauner'
                            name  = 'Martin Hauner'
                        }
                    }

                    scm {
                       url = "https://github.com/${project.projectGithubRepo}".toString ()
                    }

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution = "repo"
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def releaseRepository = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2")
                def snapshotRepository = uri("https://oss.sonatype.org/content/repositories/snapshots")
                url = project.isReleaseVersion ? releaseRepository : snapshotRepository

                credentials {
                    username = publishUser
                    password = publishKey
                }
            }
        }
    }

    signing {
        useInMemoryPgpKeys(signKey, signPwd)

        signing {
            sign publishing.publications.pluginMaven
        }
    }
}

nexusPublishing {
    repositories {
        sonatype() {
            username = publishUser
            password = publishKey
        }
    }
}

// helper

String getBuildProperty(String property) {
    project.findProperty (property) ?: System.getenv (property) ?: 'n/a'
}

String getBuildSignKey(String property) {
    project.findProperty (property) ?: System.getenv (property) ?
        System.getenv (property).replace("\\n", "\n"): 'n/a'
}
